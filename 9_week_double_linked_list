#include<string.h>
#include<stdio.h>
#include <stdlib.h>

typedef struct DListNode{
    int data;
    struct DListNode *llink;//다음 노드를 가르키도록
    struct DListNode *rlink;
}DListNode;


void init(DListNode *phead)
{
    phead->llink = phead;
    phead->rlink = phead;
}
void print_dlist(DListNode *head)
{
    DListNode* p;
    for (p=head->rlink ;p!=head; p=p->rlink){
        printf("<-| |%d| |->",p->data);
    }
    printf("\n");
}

void dinsert(DListNode *before, int data)//중간에 삽입
{
   DListNode *newnode = (DListNode *)malloc(sizeof(DListNode));
   newnode->data=data; //strcpy(newnode->data, data)
   newnode->llink=before;
   newnode->rlink=before->rlink;
   before->rlink->llink=newnode;
   before->rlink=newnode;
}
void ddelete(DListNode *head, DListNode *removed)
{
    if (removed == head) return;
    removed->llink->rlink = removed->rlink;
    removed->rlink->llink = removed->llink;
    free(removed);
}
int main(void)
{
    DListNode *head = (DListNode *)malloc(sizeof(DListNode));
    init(head);
    printf("추가 단계\n");
    for (int i=0; i<5; i++){
        dinsert(head, i);
        print_dlist(head);
    }
    printf("삭제 단계\n");
    for (int i=0; i<5; i++){
        print_dlist(head);
        ddelete(head,head->rlink);
    }
    free(head);
    return 0;
    
}
