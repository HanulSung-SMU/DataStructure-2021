#include <stdio.h>
#include <stdlib.h>

typedef int ele;
typedef struct DListNode {
    ele data;
    struct DListNode* llink;
    struct DListNode* rlink;
} DListNode;

void init(DListNode* phead)
{
    phead->llink = phead;
    phead->rlink = phead;
}

void insert(DListNode *before, ele data)
{
    DListNode *newnode = (DListNode *)malloc(sizeof(DListNode));
    newnode->data = data;
    newnode->llink = before;
    newnode->rlink = before->rlink;
    before->rlink->llink = newnode;
    before->rlink = newnode;
}

void delete(DListNode* head, DListNode* removed)
{
    if (removed == head) return;
    removed->llink->rlink = removed->rlink;
    removed->rlink->llink = removed->llink;
    free(removed);
}

void print_list(DListNode* phead)
{
    DListNode* p;
    for (p = phead->rlink; p != phead; p = p->rlink) {
        printf("<-| |%d| |-> ", p->data);
    }
    printf("\n");
}

int main(void)
{
    DListNode* head = (DListNode *)malloc(sizeof(DListNode));
    init(head);
    printf("adding...\n");
    for (int i = 0; i < 5; i++) {
        insert(head, i);
        print_list(head);
    }
    printf("deleting...\n");
    for (int i = 0; i < 5; i++) {
        print_list(head);
        delete(head, head->rlink);
    }
    free(head);
}
